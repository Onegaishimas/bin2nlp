# Docker Compose for Production Deployment
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  api:
    environment:
      # Production settings
      - APP_ENV=production
      - DEBUG=false
      - WORKERS=4
      
      # Security settings
      - REQUIRE_API_KEYS=true
      - ENFORCE_HTTPS=true
      
      # Production CORS (restrict to your domains)
      - API_CORS_ORIGINS=["https://yourdomain.com", "https://www.yourdomain.com"]
      
      # Stricter rate limiting
      - DEFAULT_RATE_LIMIT_PER_MINUTE=100
      - DEFAULT_RATE_LIMIT_PER_DAY=10000
      
    # No source code mounting in production
    volumes:
      - api_uploads:/tmp/uploads
      - api_logs:/var/log/app
      
    # Production command (no auto-reload)
    command: ["/app/start.sh"]
    
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      
      # Production deployment strategy
      replicas: 2
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  redis:
    # Don't expose Redis port in production
    ports: []
    
    # Production Redis settings
    command: >
      redis-server 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru 
      --appendonly yes
      --appendfsync everysec
      --protected-mode yes
      --bind 0.0.0.0
      
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  worker:
    # Enable worker in production
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Add reverse proxy for production
  nginx:
    image: nginx:1.25-alpine
    container_name: bin2nlp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/ssl/certs:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

# Additional production volumes
volumes:
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/nginx